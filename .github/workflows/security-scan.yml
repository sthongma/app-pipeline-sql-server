name: Security Scan

on:
  push:
    branches: [ main, develop, "claude/**" ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run weekly on Monday at 00:00 UTC
    - cron: '0 0 * * 1'

jobs:
  security-scan:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-security-${{ hashFiles('requirements-lock.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-security-
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bandit pip-audit safety

    - name: Run Bandit Security Scan
      run: |
        echo "üîç Running Bandit security linter..."
        bandit -r . -f json -o bandit-report.json || true
        bandit -r . -f txt
      continue-on-error: true

    - name: Run pip-audit for Vulnerabilities
      run: |
        echo "üîç Checking for known vulnerabilities..."
        pip-audit -r requirements-lock.txt --desc || true
      continue-on-error: true

    - name: Run Safety Check
      run: |
        echo "üîç Running safety check..."
        safety check -r requirements-lock.txt --output text || true
      continue-on-error: true

    - name: Upload Bandit Report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: bandit-security-report
        path: bandit-report.json
        retention-days: 30

    - name: Comment PR with Results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const reportExists = fs.existsSync('bandit-report.json');

          if (reportExists) {
            const report = JSON.parse(fs.readFileSync('bandit-report.json', 'utf8'));
            const highSeverity = report.results.filter(r => r.issue_severity === 'HIGH').length;
            const mediumSeverity = report.results.filter(r => r.issue_severity === 'MEDIUM').length;

            const body = `## üîí Security Scan Results

            - **High Severity Issues:** ${highSeverity}
            - **Medium Severity Issues:** ${mediumSeverity}
            - **Total Issues:** ${report.results.length}

            ${highSeverity > 0 ? '‚ö†Ô∏è Please review high severity issues before merging!' : '‚úÖ No high severity issues found'}

            Full report available in workflow artifacts.`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
          }
